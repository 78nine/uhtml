var uhtml=function(e){"use strict";const t=new WeakMap,n=/([^\s\\>"'=]+)\s*=\s*(['"]?)$/,r=/^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i,s=/<[a-z][^>]+$/i,l=/>[^<>]*$/,o=/<([a-z]+[a-z0-9:._-]*)([^>]*?)(\/>)/gi,i=/\s+$/,a=(e,t)=>{for(;t--;){const n=e[t];if(s.test(n))return!0;if(l.test(n))return!1}return!1},c=(e,t,n)=>r.test(t)?e:`<${t}${n.replace(i,"")}></${t}>`;const{isArray:u}=Array,{indexOf:d,slice:f}=[],h=(e,t)=>111===e.nodeType?1/t<0?t?(({firstChild:e,lastChild:t})=>{const n=document.createRange();return n.setStartAfter(e),n.setEndAfter(t),n.deleteContents(),e})(e):e.lastChild:t?e.valueOf():e.firstChild:e;var p=(e,t,n,r,s)=>{const l=n.length;let o=t.length,i=l,a=0,c=0,u=null;for(;a<o||c<i;)if(o===a){const t=i<l?c?r(n[c-1],-0).nextSibling:r(n[i-c],0):s;for(;c<i;)e.insertBefore(r(n[c++],1),t)}else if(i===c)for(;a<o;)u&&u.has(t[a])||e.removeChild(r(t[a],-1)),a++;else if(t[a]===n[c])a++,c++;else if(t[o-1]===n[i-1])o--,i--;else{if(o-a==1&&i-c==1){u&&u.has(t[a])?e.insertBefore(r(n[c],1),r(i<l?n[i]:s,0)):e.replaceChild(r(n[c],1),r(t[a],-1));break}if(t[a]===n[i-1]&&n[c]===t[o-1]){const s=r(t[--o],-1).nextSibling;e.insertBefore(r(n[c++],1),r(t[a++],-1).nextSibling),e.insertBefore(r(n[--i],1),s),t[o]=n[i]}else{if(!u){u=new Map;let e=c;for(;e<i;)u.set(n[e],e++)}if(u.has(t[a])){const s=u.get(t[a]);if(c<s&&s<i){let l=a,d=1;for(;++l<o&&l<i&&u.has(t[l])&&u.get(t[l])===s+d;)d++;if(d>s-c){const l=r(t[a],0);for(;c<s;)e.insertBefore(r(n[c++],1),l)}else e.replaceChild(r(n[c++],1),r(t[a++],-1))}else a++}else e.removeChild(r(t[a++],-1))}}return n};const g=e=>document.createElementNS("http://www.w3.org/1999/xhtml",e),m=(e,t)=>("svg"===t?w:b)(e),b=e=>{const t=g("template");return t.innerHTML=e,t.content},w=e=>{const{content:t}=g("template"),n=g("div");n.innerHTML='<svg xmlns="http://www.w3.org/2000/svg">'+e+"</svg>";const{childNodes:r}=n.firstChild;let{length:s}=r;for(;s--;)t.appendChild(r[0]);return t},v=(e,t)=>e.childNodes[t],N=e=>{const t=[];let{parentNode:n}=e;for(;n;)t.unshift(d.call(n.childNodes,e)),n=(e=n).parentNode;return t},{createTreeWalker:C,importNode:$}=document,x=1!=$.length,y=x?(e,t)=>$.call(document,m(e,t),!0):m,k=x?e=>C.call(document,e,129,null,!1):e=>C.call(document,e,129);function L(e){const{type:t,path:n}=e,r=n.reduce(v,this);return"node"===t?((e,t)=>{let n;const r=document.createTextNode(""),s=l=>{switch(typeof l){case"string":case"number":case"boolean":n!==l&&(n=l,r.textContent=l,t=p(e.parentNode,t,[r],h,e));break;case"object":case"undefined":if(null==l){t=p(e.parentNode,t,[],h,e);break}default:if(n=l,u(l))if(0===l.length)t=p(e.parentNode,t,[],h,e);else switch(typeof l[0]){case"string":case"number":case"boolean":s(String(l));break;default:t=p(e.parentNode,t,l,h,e)}else"ELEMENT_NODE"in l&&(t=p(e.parentNode,t,11===l.nodeType?f.call(l.childNodes):[l],h,e))}};return s})(r,[]):"attr"===t?((e,t)=>{if("ref"===t)return t=>{t.current=e};if("."===t.slice(0,1)){const n=t.slice(1);return t=>{e[n]=t}}let n;if("on"===t.slice(0,2)){let r=t.slice(2);return!(t in e)&&t.toLowerCase()in e&&(r=r.toLowerCase()),t=>{const s=u(t)?t:[t,!1];n!==s[0]&&(n&&e.removeEventListener(r,n,s[1]),(n=s[0])&&e.addEventListener(r,n,s[1]))}}let r=!0;const s=document.createAttribute(t);return t=>{n!==t&&(n=t,null==n?r||(e.removeAttributeNode(s),r=!0):(s.value=t,r&&(e.setAttributeNode(s),r=!1)))}})(r,e.name):(e=>{let t;return n=>{t!==n&&(t=n,e.textContent=null==n?"":n)}})(r)}const E=new WeakMap,A=(e,t)=>{const{content:n,updates:r}=M(e,t);return{type:e,template:t,content:n,updates:r,wire:null}},T=(e,t)=>{const r=((e,t)=>{const r=[];for(let s=0,{length:l}=e;s<l;s++){const o=e[s];n.test(o)&&a(e,s+1)?r.push(o.replace(n,(e,n,r)=>`${t}${s}=${r||'"'}${n}${r?"":'"'}`)):s+1<l?r.push(o,`\x3c!--${t}${s}--\x3e`):r.push(o)}return r.join("").trim().replace(o,c)})(t,"isµ"),s=y(r,e),l=k(s),i=[],u=t.length-1;let d=0,f=`isµ${d}`;for(;d<u;){const e=l.nextNode();if(!e)throw`bad template: ${r}`;if(8===e.nodeType)e.textContent===f&&(i.push({type:"node",path:N(e)}),f=`isµ${++d}`);else{for(;e.hasAttribute(f);)i.push({type:"attr",path:N(e),name:e.getAttribute(f)}),e.removeAttribute(f),f=`isµ${++d}`;/^(?:style|textarea)$/i.test(e.tagName)&&e.textContent.trim()===`\x3c!--${f}--\x3e`&&(i.push({type:"text",path:N(e)}),f=`isµ${++d}`)}}return{content:s,nodes:i}},M=(e,t)=>{const{content:n,nodes:r}=E.get(t)||S(e,t),s=$.call(document,n,!0);return{content:s,updates:r.map(L,s)}},O=(e,t)=>{const{sub:n,stack:r}=e,s={a:0,aLength:n.length,i:0,iLength:r.length},l=B(e,t,s),{a:o,i:i,aLength:a,iLength:c}=s;return o<a&&n.splice(o),i<c&&r.splice(i),l},S=(e,t)=>{const n=T(e,t);return E.set(t,n),n},B=(e,t,n)=>{const{stack:r}=e,{i:s,iLength:l}=n,{type:o,template:i,values:a}=t,c=s===l;c&&(n.iLength=r.push(A(o,i))),n.i++,W(e,a,n);let u=r[s];c||u.template===i&&u.type===o||(r[s]=u=A(o,i));const{content:d,updates:h,wire:p}=u;for(let e=0,{length:t}=h;e<t;e++)h[e](a[e]);return p||(u.wire=(e=>{const{childNodes:t}=e,{length:n}=t;if(n<2)return t[0];const r=f.call(t,0);return{ELEMENT_NODE:1,nodeType:111,firstChild:r[0],lastChild:r[n-1],valueOf(){if(t.length!==n){let t=0;for(;t<n;)e.appendChild(r[t++])}return e}}})(d))},W=(e,t,n)=>{let{a:r,aLength:s}=n;for(let l=0,{length:o}=t,{sub:i}=e;l<o;l++){const o=t[l];if(o instanceof j)t[l]=B(e,o,n);else if(u(o)){const{length:e}=o,t=r+e;for(;s<t;)s=i.push(null);for(let t=0;t<e;t++){const e=o[t];e instanceof j&&(o[t]=O(i[r]||(i[r]={sub:[],stack:[],wire:null}),e)),r++}}r++}n.a=r,n.aLength=s};function j(e,t,n){this.type=e,this.template=t,this.values=n}const{create:z,defineProperties:_}=Object,D=e=>{const t=new WeakMap;return _((t,...n)=>new j(e,t,n),{for:{value(n,r){const s=t.get(n)||t.set(n,z(null)).get(n);return s[r]||(s[r]=(l={sub:[],stack:[],wire:null},(t,...n)=>O(l,new j(e,t,n))));var l}},node:{value:(t,...n)=>O({sub:[],stack:[],wire:null},new j(e,t,n))}})},H=D("html"),P=D("svg");return e.html=H,e.render=(e,n)=>{const r="function"==typeof n?n():n,s=t.get(e)||(e=>{const n={sub:[],stack:[],wire:null};return t.set(e,n),n})(e),l=r instanceof j?O(s,r):r;return l!==s.wire&&(s.wire=l,e.textContent="",e.appendChild(l.valueOf())),e},e.svg=P,e}({});
