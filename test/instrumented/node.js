function cov_2fgrfr8hkg(){var path="/home/ag/git/uhtml/esm/node.js";var hash="49b6ad94119ed87206377f9751249d2d6e1ed552";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/ag/git/uhtml/esm/node.js",statementMap:{"0":{start:{line:4,column:26},end:{line:4,column:57}},"1":{start:{line:4,column:39},end:{line:4,column:57}},"2":{start:{line:6,column:26},end:{line:15,column:1}},"3":{start:{line:7,column:15},end:{line:7,column:17}},"4":{start:{line:8,column:21},end:{line:8,column:25}},"5":{start:{line:9,column:2},end:{line:13,column:3}},"6":{start:{line:10,column:4},end:{line:10,column:60}},"7":{start:{line:11,column:4},end:{line:11,column:22}},"8":{start:{line:12,column:4},end:{line:12,column:33}},"9":{start:{line:14,column:2},end:{line:14,column:14}},"10":{start:{line:17,column:39},end:{line:17,column:47}},"11":{start:{line:23,column:11},end:{line:23,column:33}},"12":{start:{line:25,column:30},end:{line:32,column:15}},"13":{start:{line:39,column:28},end:{line:42,column:64}},"14":{start:{line:42,column:14},end:{line:42,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:26},end:{line:4,column:27}},loc:{start:{line:4,column:39},end:{line:4,column:57}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:6,column:26},end:{line:6,column:27}},loc:{start:{line:6,column:34},end:{line:15,column:1}},line:6},"2":{name:"(anonymous_2)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:14},end:{line:42,column:64}},line:42}},branchMap:{"0":{loc:{start:{line:25,column:30},end:{line:32,column:15}},type:"cond-expr",locations:[{start:{line:32,column:2},end:{line:32,column:15}}],line:25},"1":{loc:{start:{line:39,column:28},end:{line:42,column:64}},type:"cond-expr",locations:[{start:{line:42,column:2},end:{line:42,column:64}}],line:39}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0},b:{"0":[0],"1":[0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"49b6ad94119ed87206377f9751249d2d6e1ed552"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_2fgrfr8hkg=function(){return actualCoverage;};return actualCoverage;}cov_2fgrfr8hkg();import createContent from '../../node_modules/@ungap/create-content/esm/index.js';import{indexOf}from '../../node_modules/uarray/esm/index.js';cov_2fgrfr8hkg().s[0]++;export const reducePath=(node,i)=>{cov_2fgrfr8hkg().f[0]++;cov_2fgrfr8hkg().s[1]++;return node.childNodes[i];};cov_2fgrfr8hkg().s[2]++;export const createPath=node=>{cov_2fgrfr8hkg().f[1]++;const path=(cov_2fgrfr8hkg().s[3]++,[]);let{parentNode}=(cov_2fgrfr8hkg().s[4]++,node);cov_2fgrfr8hkg().s[5]++;while(parentNode){cov_2fgrfr8hkg().s[6]++;path.unshift(indexOf.call(parentNode.childNodes,node));cov_2fgrfr8hkg().s[7]++;node=parentNode;cov_2fgrfr8hkg().s[8]++;parentNode=node.parentNode;}cov_2fgrfr8hkg().s[9]++;return path;};const{createTreeWalker,importNode}=(cov_2fgrfr8hkg().s[10]++,document);export{createTreeWalker,importNode};// basicHTML would never have a false case,
// unless forced, but it has no value for this coverage.
// IE11 and old Edge are passing live tests so we're good.
const IE=(cov_2fgrfr8hkg().s[11]++,importNode.length!=1);export const createFragment=(cov_2fgrfr8hkg().s[12]++,IE?/* istanbul ignore next */(text,type)=>importNode.call(document,createContent(text,type),true):(cov_2fgrfr8hkg().b[0][0]++,createContent));// to support IE10 and IE9 I could pass a callback instead
// with an `acceptNode` mode that's the callback itself
// function acceptNode() { return 1; } acceptNode.acceptNode = acceptNode;
// however, I really don't care anymore about IE10 and IE9, as these would
// require also a WeakMap polyfill, and have no reason to exist whatsoever.
export const createWalker=(cov_2fgrfr8hkg().s[13]++,IE?/* istanbul ignore next */fragment=>createTreeWalker.call(document,fragment,1|128,null,false):(cov_2fgrfr8hkg().b[1][0]++,fragment=>{cov_2fgrfr8hkg().f[2]++;cov_2fgrfr8hkg().s[14]++;return createTreeWalker.call(document,fragment,1|128);}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGUuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29udGVudCIsImluZGV4T2YiLCJyZWR1Y2VQYXRoIiwibm9kZSIsImkiLCJjaGlsZE5vZGVzIiwiY3JlYXRlUGF0aCIsInBhdGgiLCJwYXJlbnROb2RlIiwidW5zaGlmdCIsImNhbGwiLCJjcmVhdGVUcmVlV2Fsa2VyIiwiaW1wb3J0Tm9kZSIsImRvY3VtZW50IiwiSUUiLCJsZW5ndGgiLCJjcmVhdGVGcmFnbWVudCIsInRleHQiLCJ0eXBlIiwiY3JlYXRlV2Fsa2VyIiwiZnJhZ21lbnQiXSwibWFwcGluZ3MiOiJ3eEVBQUEsTUFBT0EsQ0FBQUEsYUFBUCxLQUEwQix1QkFBMUIsQ0FDQSxPQUFRQyxPQUFSLEtBQXNCLFFBQXRCLEMsd0JBRUEsTUFBTyxNQUFNQyxDQUFBQSxVQUFVLENBQUcsQ0FBQ0MsSUFBRCxDQUFPQyxDQUFQLEdBQWEsdURBQUFELENBQUFBLElBQUksQ0FBQ0UsVUFBTCxDQUFnQkQsQ0FBaEIsRUFBa0IsQ0FBbEQsQyx3QkFFUCxNQUFPLE1BQU1FLENBQUFBLFVBQVUsQ0FBR0gsSUFBSSxFQUFJLHlCQUNoQyxLQUFNSSxDQUFBQSxJQUFJLDBCQUFHLEVBQUgsQ0FBVixDQUNBLEdBQUksQ0FBQ0MsVUFBRCwyQkFBZUwsSUFBZixDQUFKLENBRmdDLHdCQUdoQyxNQUFPSyxVQUFQLENBQW1CLHlCQUNqQkQsSUFBSSxDQUFDRSxPQUFMLENBQWFSLE9BQU8sQ0FBQ1MsSUFBUixDQUFhRixVQUFVLENBQUNILFVBQXhCLENBQW9DRixJQUFwQyxDQUFiLEVBRGlCLHdCQUVqQkEsSUFBSSxDQUFHSyxVQUFQLENBRmlCLHdCQUdqQkEsVUFBVSxDQUFHTCxJQUFJLENBQUNLLFVBQWxCLENBQ0QsQ0FQK0Isd0JBUWhDLE1BQU9ELENBQUFBLElBQVAsQ0FDRCxDQVRNLENBV1AsS0FBTSxDQUFDSSxnQkFBRCxDQUFtQkMsVUFBbkIsNEJBQWlDQyxRQUFqQyxDQUFOLENBQ0EsT0FBUUYsZ0JBQVIsQ0FBMEJDLFVBQTFCLEVBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBTUUsQ0FBQUEsRUFBRSwyQkFBR0YsVUFBVSxDQUFDRyxNQUFYLEVBQXFCLENBQXhCLENBQVIsQ0FFQSxNQUFPLE1BQU1DLENBQUFBLGNBQWMsMkJBQUdGLEVBQUUsQ0FDOUIsMEJBQ0EsQ0FBQ0csSUFBRCxDQUFPQyxJQUFQLEdBQWdCTixVQUFVLENBQUNGLElBQVgsQ0FDZEcsUUFEYyxDQUVkYixhQUFhLENBQUNpQixJQUFELENBQU9DLElBQVAsQ0FGQyxDQUdkLElBSGMsQ0FGYyw2QkFPOUJsQixhQVA4QixDQUFMLENBQXBCLENBU1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU8sTUFBTW1CLENBQUFBLFlBQVksMkJBQUdMLEVBQUUsQ0FDNUIsMEJBQ0FNLFFBQVEsRUFBSVQsZ0JBQWdCLENBQUNELElBQWpCLENBQXNCRyxRQUF0QixDQUFnQ08sUUFBaEMsQ0FBMEMsRUFBSSxHQUE5QyxDQUFtRCxJQUFuRCxDQUF5RCxLQUF6RCxDQUZnQiw2QkFHNUJBLFFBQVEsRUFBSSx3REFBQVQsQ0FBQUEsZ0JBQWdCLENBQUNELElBQWpCLENBQXNCRyxRQUF0QixDQUFnQ08sUUFBaEMsQ0FBMEMsRUFBSSxHQUE5QyxFQUFrRCxDQUhsQyxDQUFMLENBQWxCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUNvbnRlbnQgZnJvbSAnQHVuZ2FwL2NyZWF0ZS1jb250ZW50JztcbmltcG9ydCB7aW5kZXhPZn0gZnJvbSAndWFycmF5JztcblxuZXhwb3J0IGNvbnN0IHJlZHVjZVBhdGggPSAobm9kZSwgaSkgPT4gbm9kZS5jaGlsZE5vZGVzW2ldO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUGF0aCA9IG5vZGUgPT4ge1xuICBjb25zdCBwYXRoID0gW107XG4gIGxldCB7cGFyZW50Tm9kZX0gPSBub2RlO1xuICB3aGlsZSAocGFyZW50Tm9kZSkge1xuICAgIHBhdGgudW5zaGlmdChpbmRleE9mLmNhbGwocGFyZW50Tm9kZS5jaGlsZE5vZGVzLCBub2RlKSk7XG4gICAgbm9kZSA9IHBhcmVudE5vZGU7XG4gICAgcGFyZW50Tm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gcGF0aDtcbn07XG5cbmNvbnN0IHtjcmVhdGVUcmVlV2Fsa2VyLCBpbXBvcnROb2RlfSA9IGRvY3VtZW50O1xuZXhwb3J0IHtjcmVhdGVUcmVlV2Fsa2VyLCBpbXBvcnROb2RlfTtcblxuLy8gYmFzaWNIVE1MIHdvdWxkIG5ldmVyIGhhdmUgYSBmYWxzZSBjYXNlLFxuLy8gdW5sZXNzIGZvcmNlZCwgYnV0IGl0IGhhcyBubyB2YWx1ZSBmb3IgdGhpcyBjb3ZlcmFnZS5cbi8vIElFMTEgYW5kIG9sZCBFZGdlIGFyZSBwYXNzaW5nIGxpdmUgdGVzdHMgc28gd2UncmUgZ29vZC5cbmNvbnN0IElFID0gaW1wb3J0Tm9kZS5sZW5ndGggIT0gMTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUZyYWdtZW50ID0gSUUgP1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAodGV4dCwgdHlwZSkgPT4gaW1wb3J0Tm9kZS5jYWxsKFxuICAgIGRvY3VtZW50LFxuICAgIGNyZWF0ZUNvbnRlbnQodGV4dCwgdHlwZSksXG4gICAgdHJ1ZVxuICApIDpcbiAgY3JlYXRlQ29udGVudDtcblxuLy8gdG8gc3VwcG9ydCBJRTEwIGFuZCBJRTkgSSBjb3VsZCBwYXNzIGEgY2FsbGJhY2sgaW5zdGVhZFxuLy8gd2l0aCBhbiBgYWNjZXB0Tm9kZWAgbW9kZSB0aGF0J3MgdGhlIGNhbGxiYWNrIGl0c2VsZlxuLy8gZnVuY3Rpb24gYWNjZXB0Tm9kZSgpIHsgcmV0dXJuIDE7IH0gYWNjZXB0Tm9kZS5hY2NlcHROb2RlID0gYWNjZXB0Tm9kZTtcbi8vIGhvd2V2ZXIsIEkgcmVhbGx5IGRvbid0IGNhcmUgYW55bW9yZSBhYm91dCBJRTEwIGFuZCBJRTksIGFzIHRoZXNlIHdvdWxkXG4vLyByZXF1aXJlIGFsc28gYSBXZWFrTWFwIHBvbHlmaWxsLCBhbmQgaGF2ZSBubyByZWFzb24gdG8gZXhpc3Qgd2hhdHNvZXZlci5cbmV4cG9ydCBjb25zdCBjcmVhdGVXYWxrZXIgPSBJRSA/XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGZyYWdtZW50ID0+IGNyZWF0ZVRyZWVXYWxrZXIuY2FsbChkb2N1bWVudCwgZnJhZ21lbnQsIDEgfCAxMjgsIG51bGwsIGZhbHNlKSA6XG4gIGZyYWdtZW50ID0+IGNyZWF0ZVRyZWVXYWxrZXIuY2FsbChkb2N1bWVudCwgZnJhZ21lbnQsIDEgfCAxMjgpO1xuIl19