export function removeAttribute(element: any, name: any): void;
export function aria<T>(element: Element, value: T): T;
export function arrayComment(): (node: Node, value: Node[], _: string, prev: Node[]) => Node[];
export function at<T>(element: Element, value: T, name: string): T;
export function boundComment(): any;
export function className<T>(element: Element, value: T): T;
export function data<T>(element: Element, value: T): T;
export function direct<T>(ref: Element | CSSStyleDeclaration, value: T, name: string): T;
export function dot<T>(element: Element, value: T, name: string): T;
export function maybeDirect<T>(element: Element, value: T, name: string): T;
export function ref<T>(element: Element, value: T): T;
export function style<T>(element: Element, value: T): T;
export function toggle<T>(element: Element, value: T, name: string): T;
export function array(node: Node, value: Node[], _: string, prev: Node[]): Node[];
export const attr: Map<string, <T>(element: Element, value: T) => T>;
export function attribute(element: HTMLElement | SVGElement, name: string, svg: boolean): <T>(element: Element, value: T, name: string) => T;
export function text<T>(element: Element, value: T): T;
